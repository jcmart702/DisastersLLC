import test from 'ava';
import { parseXml, template } from '../../lib/sam/utils';

test(`template('link[@leftPtr >= {$HOME/@leftPtr} and @rightPtr <= {$HOME/@rightPtr}]', {HOME: node})`, async t => {
  // Ensure tests only pass when a specific number of assertions have
  // been executed
  t.plan(1);

  const node = parseXml(`<navigation><link id="1" leftPtr="0" rightPtr="2089"></link></navigation>`, 'link');
  const result = await template(
    `link[@leftPtr >= {$HOME/@leftPtr} and @rightPtr <= {$HOME/@rightPtr}]`,
    {
      'HOME': node
    }
  );

  t.is(result, `link[@leftPtr >= ${node.attr('leftPtr').value()} and @rightPtr <= ${node.attr('rightPtr').value()}]`);
});

test(`template('link[@parent-id = {$SITE/@id}]', {SITE: node})`, async t => {
  t.plan(1);

  const node = parseXml(`<sites><site id="1" name="Example"></site></sites>`, 'site');
  const result = await template(
    `link[@parent-id = {$SITE/@id}]`,
    {
      'SITE': node
    }
  );

  t.is(result, `link[@parent-id = 1]`);
});
